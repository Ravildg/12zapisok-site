"use client"

import { useEffect, useState } from "react"
import Image from "next/image"

type SectionKey =
  | "hero"
  | "games"
  | "occasions"
  | "howItWorks"
  | "faq"
  | "gallery"
  | "reviews"
  | "pricing"

const sections: { key: SectionKey; label: string }[] = [
  { key: "hero", label: "–ì–ª–∞–≤–Ω–∞—è" },
  { key: "games", label: "–ò–≥—Ä—ã" },
  { key: "occasions", label: "–ü–æ–≤–æ–¥—ã" },
  { key: "howItWorks", label: "–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç" },
  { key: "faq", label: "–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã" },
  { key: "gallery", label: "–ì–∞–ª–µ—Ä–µ—è" },
  { key: "reviews", label: "–û—Ç–∑—ã–≤—ã" },
  { key: "pricing", label: "–¢–∞—Ä–∏—Ñ—ã" },
]

type SectionData = {
  title: string
  subtitle: string
  description: string
  image: string
}

export default function AdminPage() {
  const [active, setActive] = useState<SectionKey>("hero")
  const [data, setData] = useState<Record<SectionKey, SectionData>>({
    hero: defaultData("–ì–ª–∞–≤–Ω–∞—è —Å–µ–∫—Ü–∏—è"),
    games: defaultData("–ò–≥—Ä—ã"),
    occasions: defaultData("–ü–æ–≤–æ–¥—ã"),
    howItWorks: defaultData("–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"),
    faq: defaultData("FAQ"),
    gallery: defaultData("–ì–∞–ª–µ—Ä–µ—è"),
    reviews: defaultData("–û—Ç–∑—ã–≤—ã"),
    pricing: defaultData("–¢–∞—Ä–∏—Ñ—ã"),
  })

  function defaultData(title: string): SectionData {
    return {
      title,
      subtitle: "",
      description: "",
      image: "",
    }
  }

  useEffect(() => {
    const saved = localStorage.getItem("adminData")
    if (saved) {
      setData(JSON.parse(saved))
    }
  }, [])

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target
    setData((prev) => ({
      ...prev,
      [active]: {
        ...prev[active],
        [name]: value,
      },
    }))
  }

  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0]
    if (!file) return

    const reader = new FileReader()
    reader.onloadend = () => {
      setData((prev) => ({
        ...prev,
        [active]: {
          ...prev[active],
          image: reader.result as string,
        },
      }))
    }
    reader.readAsDataURL(file)
  }

  const handleSave = () => {
    localStorage.setItem("adminData", JSON.stringify(data))
    alert("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
  }

  const current = data[active]

  return (
    <div className="min-h-screen bg-gray-100 p-6">
      <h1 className="text-2xl font-bold mb-4">–ê–¥–º–∏–Ω–∫–∞ —Å–∞–π—Ç–∞</h1>

      <div className="flex gap-2 flex-wrap mb-6">
        {sections.map((s) => (
          <button
            key={s.key}
            onClick={() => setActive(s.key)}
            className={`px-4 py-2 rounded ${
              active === s.key ? "bg-blue-500 text-white" : "bg-gray-300"
            }`}
          >
            {s.label}
          </button>
        ))}
      </div>

      <div className="bg-white p-6 rounded-lg shadow max-w-2xl space-y-4">
        <div>
          <label className="block text-sm font-medium">–ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
          <input
            type="text"
            name="title"
            value={current.title}
            onChange={handleChange}
            className="w-full p-2 border rounded"
          />
        </div>
        <div>
          <label className="block text-sm font-medium">–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫</label>
          <input
            type="text"
            name="subtitle"
            value={current.subtitle}
            onChange={handleChange}
            className="w-full p-2 border rounded"
          />
        </div>
        <div>
          <label className="block text-sm font-medium">–û–ø–∏—Å–∞–Ω–∏–µ</label>
          <textarea
            name="description"
            value={current.description}
            onChange={handleChange}
            className="w-full p-2 border rounded"
          />
        </div>
        <div>
          <label className="block text-sm font-medium">–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</label>
          <input type="file" accept="image/*" onChange={handleImageUpload} />
          {current.image && (
            <Image
              src={current.image}
              alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä"
              width={400}
              height={200}
              className="mt-2 object-cover rounded shadow"
            />
          )}
        </div>

        <button onClick={handleSave} className="bg-blue-600 text-white px-4 py-2 rounded">
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
        </button>
      </div>
    </div>
  )
}
